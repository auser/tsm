services:
  # Traefik reverse proxy and load balancer
  traefik:
    image: fp/traefik
    container_name: traefik
    restart: unless-stopped
    user: "0:0"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    networks:
      - traefik
      - monitoring
      - default
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
      - type: bind
        source: ./config/traefik/dynamic
        target: /etc/traefik/dynamic
      - traefik_data:/data
      - traefik_logs:/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.ddev`) || Host(`traefik.herringbank.com`)"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.services.traefik-proxy.loadbalancer.server.port=443"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=admin-secure@file"

  static:
    image: fp/static
    container_name: static
    restart: unless-stopped
    # volumes:
    # - ./static:/usr/share/nginx/html:ro
    networks:
      - default
      - monitoring
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`static.ddev`) || Host(`static.herringbank.com`)"
      - "traefik.http.routers.static.middlewares=web-standard@file"

  # Prometheus for metrics collection
  prometheus:
    build:
      context: ./monitoring/prometheus
      dockerfile_inline: |
        FROM prom/prometheus:latest
        COPY prometheus.yml /etc/prometheus/prometheus.yml
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    networks:
      - traefik
      - monitoring
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.ddev`) || Host(`prometheus.herringbank.com`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.middlewares=monitoring-secure@file"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=grafana.ddev
      - GF_SERVER_ROOT_URL=https://grafana.ddev
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    ports:
      - "4000:4000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    user: "472" # grafana user
    networks:
      - traefik
      - monitoring
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.ddev`) || Host(`grafana.herringbank.com`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=4000"
      - "traefik.http.routers.grafana.middlewares=monitoring-secure@file"

  # AlertManager for alerting
  # alertmanager:
  #   image: prom/alertmanager:latest
  #   container_name: alertmanager
  #   restart: unless-stopped
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #     - '--storage.path=/alertmanager'
  #     - '--web.external-url=https://alertmanager.ddev'
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
  #     - alertmanager_data:/alertmanager
  #   networks:
  #     - monitoring
  #     - traefik

  # Node Exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - traefik
      - monitoring
      - default
    labels:
      - "traefik.enable=false"

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8082:8080"
    networks:
      - traefik
      - monitoring
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.ddev`) || Host(`cadvisor.herringbank.com`)"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"

volumes:
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data
  alertmanager_data:
    name: alertmanager_data
  traefik_data:
    name: traefik_data
  traefik_logs:
    name: traefik_logs
  traefik_dynamic:
    name: traefik_dynamic

networks:
  traefik:
    name: traefik
    driver: bridge
  monitoring:
    name: monitoring
    driver: bridge
  inter_app:
    name: inter_app
    driver: bridge
