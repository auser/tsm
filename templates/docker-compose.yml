services:
  # Traefik reverse proxy and load balancer
  traefik:
    image: fp/traefik
    container_name: traefik
    restart: unless-stopped
    user: "0:0" # Run as root to ensure Docker socket access
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addserviceslabels=true
      - --log.level=INFO
      - --accesslog=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config:/etc/traefik:ro
    networks:
      - traefik
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.ddev`) || Host(`traefik.herringbank.com`)"
      - "traefik.http.routers.traefik.service=api@internal"

  static:
    image: fp/static
    container_name: static
    restart: unless-stopped
    ports:
      - "8081:8081"
    volumes:
      - ./static:/usr/share/nginx/html:ro
    networks:
      - traefik
      - monitoring

  # Consul for service discovery and configuration
  # consul:
  #   image: consul:1.15
  #   container_name: consul
  #   restart: unless-stopped
  #   command: consul agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0
  #   environment:
  #     - CONSUL_BIND_INTERFACE=eth0
  #   ports:
  #     - "8500:8500"
  #     - "8600:8600/udp"
  #   volumes:
  #     - consul_data:/consul/data
  #   networks:
  #     - traefik
  #     - monitoring
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.consul.rule=Host(`consul.ddev`) || Host(`consul.herringbank.com`)"
  #     - "traefik.http.services.consul.loadbalancer.server.port=8500"

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/rules:/etc/prometheus/rules:ro
      - prometheus_data:/prometheus
    networks:
      - monitoring
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.ddev`) || Host(`prometheus.herringbank.com`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=grafana.ddev
      - GF_SERVER_ROOT_URL=https://grafana.ddev
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - monitoring
      - traefik

  # AlertManager for alerting
  # alertmanager:
  #   image: prom/alertmanager:latest
  #   container_name: alertmanager
  #   restart: unless-stopped
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #     - '--storage.path=/alertmanager'
  #     - '--web.external-url=https://alertmanager.ddev'
  #   ports:
  #     - "9093:9093"
  #   volumes:
  #     - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
  #     - alertmanager_data:/alertmanager
  #   networks:
  #     - monitoring
  #     - traefik

  # Node Exporter for host metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - monitoring
    labels:
      - "traefik.enable=false"

  # cAdvisor for container metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8082:8080"
    networks:
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`cadvisor.ddev`) || Host(`cadvisor.herringbank.com`)"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"

volumes:
  consul_data:
    name: consul_data
  prometheus_data:
    name: prometheus_data
  grafana_data:
    name: grafana_data
  alertmanager_data:
    name: alertmanager_data

networks:
  traefik:
    name: traefik
    driver: bridge
    external: true
  monitoring:
    name: monitoring
    driver: bridge
  inter_app:
    name: inter_app
    driver: bridge
