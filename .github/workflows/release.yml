name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            binary_name: tsm-linux-amd64
          - os: macos-latest
            binary_name: tsm-macos-amd64
          - os: windows-latest
            binary_name: tsm-windows-amd64.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install --system --project $GITHUB_WORKSPACE -e .
          uv pip install --system --project $GITHUB_WORKSPACE pyinstaller

      - name: Build binary
        run: |
          chmod +x build_binary.sh
          ./build_binary.sh

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.binary_name }}
          path: dist/tsm*

  create-release:
    name: Create Release
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/tsm-linux-amd64/tsm
            artifacts/tsm-macos-amd64/tsm
            artifacts/tsm-windows-amd64.exe/tsm.exe
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
