def make_exe():
    # Obtain the default PythonDistribution for our build target.
    dist = default_python_distribution()

    # Create a packaging policy
    policy = dist.make_python_packaging_policy()
    policy.resources_location = "filesystem-relative:prefix"
    
    # Configure the Python interpreter
    python_config = dist.make_python_interpreter_config()
    python_config.config_profile = "python"
    python_config.run_module = "tsm.cli"
    
    # Set up the executable
    exe = dist.to_python_executable(
        name="tsm",
        packaging_policy=policy,
        config=python_config,
    )

    # Install dependencies from requirements.txt (this should work)
    exe.add_python_resources(exe.pip_install(["-r", "requirements.txt"]))

    # Add the main package from src
    exe.add_python_resources(exe.read_package_root(
        path="src",
        packages=["tsm"],
    ))

    # Add templates directory  
    exe.add_python_resources(exe.read_package_root(
        path="templates",
        packages=["templates"],
    ))

    return exe

def make_embedded_resources(exe):
    return exe.to_embedded_resources()

def make_install(exe):
    files = FileManifest()
    files.add_python_resource(".", exe)
    return files

# Register all build targets
register_target("exe", make_exe)
register_target("resources", make_embedded_resources, depends=["exe"], default_build_script=True)
register_target("install", make_install, depends=["exe"], default=True)

resolve_targets()